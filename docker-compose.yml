services:
    postgres:
        image: postgres
        container_name: postgres_db
        restart: always
        environment:
          POSTGRES_DB: ${POSTGRES_DB}
          POSTGRES_USER: ${POSTGRES_USER}
          POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
          POSTGRES_ROOT_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
        ports:
          - ${POSTGRES_PORT}:5432
        volumes:
          - postgres-db-volume:/var/lib/postgresql/data
          - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
          interval: 10s
          retries: 5
          start_period: 30s
          timeout: 10s
        networks:
            - db-network
    pgadmin:
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        ports:
            - ${PGADMIN_PORT}:80
        volumes:
            - ./scripts/servers.json:/pgadmin4/servers.json
        networks:
            - db-network       
            
    movies-backend:
        build:
            context: https://github.com/AgueroSalcinesIgnacio/cinema-backend-movies.git#feature/docker
            dockerfile: Dockerfile
        image: movies-backend
        environment:
            DB_URL: ${POSTGRES_URL}
            PG_USER: ${POSTGRES_USER}
            PG_PASSWORD: ${POSTGRES_PASSWORD}
        ports:
            - ${BACKEND_MOVIES_PORT}:8080
        
        depends_on:
            postgres:
                condition: service_healthy
                restart: true
        networks:
            - db-network
            - backend-network
            
    cinema-bff:
        build:
           context: https://github.com/AgueroSalcinesIgnacio/cinema-bff.git#develop
           target: build
        image: cinema-bff
        environment:
            BACKEND_URL: ${BACKEND_URL}
        volumes:
           - ../backend_for_frontend/cinema-bff/:/app
           - /app/node_modules
        ports:
           - ${BFF_PORT}:3000
        command: npm run dev
        depends_on:
            - movies-backend
        networks:
            - backend-network
            
volumes:
    postgres-db-volume:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: ./postgres/data
networks:
    db-network:
        driver: bridge
    backend-network:
        driver: bridge
